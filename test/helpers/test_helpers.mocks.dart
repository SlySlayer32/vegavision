// Mocks generated by Mockito 5.4.5 from annotations
// in vegavision/test/helpers/test_helpers.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i8;
import 'dart:io' as _i9;

import 'package:mockito/mockito.dart' as _i1;
import 'package:vegavision/core/di/database_interface.dart' as _i7;
import 'package:vegavision/models/edit_request.dart' as _i2;
import 'package:vegavision/models/edit_result.dart' as _i4;
import 'package:vegavision/models/image_model.dart' as _i5;
import 'package:vegavision/repositories/edit_repository.dart' as _i3;
import 'package:vegavision/repositories/image_repository.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEditRequest_0 extends _i1.SmartFake implements _i2.EditRequest {
  _FakeEditRequest_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePaginatedResult_1<T> extends _i1.SmartFake
    implements _i3.PaginatedResult<T> {
  _FakePaginatedResult_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEditResult_2 extends _i1.SmartFake implements _i4.EditResult {
  _FakeEditResult_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeImageModel_3 extends _i1.SmartFake implements _i5.ImageModel {
  _FakeImageModel_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePaginatedResult_4<T> extends _i1.SmartFake
    implements _i6.PaginatedResult<T> {
  _FakePaginatedResult_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [Database].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabase extends _i1.Mock implements _i7.Database {
  MockDatabase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<void> saveImage(_i5.ImageModel? image) => (super.noSuchMethod(
        Invocation.method(
          #saveImage,
          [image],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<List<_i5.ImageModel>> getImages() => (super.noSuchMethod(
        Invocation.method(
          #getImages,
          [],
        ),
        returnValue: _i8.Future<List<_i5.ImageModel>>.value(<_i5.ImageModel>[]),
      ) as _i8.Future<List<_i5.ImageModel>>);

  @override
  _i8.Future<_i5.ImageModel?> getImage(String? id) => (super.noSuchMethod(
        Invocation.method(
          #getImage,
          [id],
        ),
        returnValue: _i8.Future<_i5.ImageModel?>.value(),
      ) as _i8.Future<_i5.ImageModel?>);

  @override
  _i8.Future<void> updateImage(_i5.ImageModel? image) => (super.noSuchMethod(
        Invocation.method(
          #updateImage,
          [image],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<bool> deleteImage(String? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteImage,
          [id],
        ),
        returnValue: _i8.Future<bool>.value(false),
      ) as _i8.Future<bool>);

  @override
  _i8.Future<void> saveEditRequest(_i2.EditRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveEditRequest,
          [request],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<List<_i2.EditRequest>> getEditRequests({String? imageId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getEditRequests,
          [],
          {#imageId: imageId},
        ),
        returnValue:
            _i8.Future<List<_i2.EditRequest>>.value(<_i2.EditRequest>[]),
      ) as _i8.Future<List<_i2.EditRequest>>);

  @override
  _i8.Future<_i2.EditRequest?> getEditRequest(String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getEditRequest,
          [id],
        ),
        returnValue: _i8.Future<_i2.EditRequest?>.value(),
      ) as _i8.Future<_i2.EditRequest?>);

  @override
  _i8.Future<void> updateEditRequest(_i2.EditRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateEditRequest,
          [request],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<bool> deleteEditRequest(String? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteEditRequest,
          [id],
        ),
        returnValue: _i8.Future<bool>.value(false),
      ) as _i8.Future<bool>);

  @override
  _i8.Future<void> saveEditResult(_i4.EditResult? result) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveEditResult,
          [result],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<List<_i4.EditResult>> getEditResults({
    String? requestId,
    String? imageId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getEditResults,
          [],
          {
            #requestId: requestId,
            #imageId: imageId,
          },
        ),
        returnValue: _i8.Future<List<_i4.EditResult>>.value(<_i4.EditResult>[]),
      ) as _i8.Future<List<_i4.EditResult>>);

  @override
  _i8.Future<_i4.EditResult?> getEditResult(String? id) => (super.noSuchMethod(
        Invocation.method(
          #getEditResult,
          [id],
        ),
        returnValue: _i8.Future<_i4.EditResult?>.value(),
      ) as _i8.Future<_i4.EditResult?>);

  @override
  _i8.Future<bool> deleteEditResult(String? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteEditResult,
          [id],
        ),
        returnValue: _i8.Future<bool>.value(false),
      ) as _i8.Future<bool>);

  @override
  _i8.Future<void> saveMultipleImages(List<_i5.ImageModel>? images) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveMultipleImages,
          [images],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> saveMultipleEditRequests(List<_i2.EditRequest>? requests) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveMultipleEditRequests,
          [requests],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> saveMultipleEditResults(List<_i4.EditResult>? results) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveMultipleEditResults,
          [results],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> deleteOldData(DateTime? olderThan) => (super.noSuchMethod(
        Invocation.method(
          #deleteOldData,
          [olderThan],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> cleanupUnusedData() => (super.noSuchMethod(
        Invocation.method(
          #cleanupUnusedData,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);
}

/// A class which mocks [EditRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockEditRepository extends _i1.Mock implements _i3.EditRepository {
  MockEditRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<_i2.EditRequest> createEditRequest(
    String? imageId,
    List<dynamic>? markers,
    String? instruction, {
    String? userId,
    Map<String, dynamic>? additionalOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createEditRequest,
          [
            imageId,
            markers,
            instruction,
          ],
          {
            #userId: userId,
            #additionalOptions: additionalOptions,
          },
        ),
        returnValue: _i8.Future<_i2.EditRequest>.value(_FakeEditRequest_0(
          this,
          Invocation.method(
            #createEditRequest,
            [
              imageId,
              markers,
              instruction,
            ],
            {
              #userId: userId,
              #additionalOptions: additionalOptions,
            },
          ),
        )),
      ) as _i8.Future<_i2.EditRequest>);

  @override
  _i8.Future<_i3.PaginatedResult<_i2.EditRequest>> getEditRequests({
    int? page = 1,
    int? pageSize = 20,
    _i3.EditRequestFilter? filter,
    _i3.EditRequestSortField? sortField = _i3.EditRequestSortField.createdAt,
    _i3.SortDirection? sortDirection = _i3.SortDirection.descending,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getEditRequests,
          [],
          {
            #page: page,
            #pageSize: pageSize,
            #filter: filter,
            #sortField: sortField,
            #sortDirection: sortDirection,
          },
        ),
        returnValue: _i8.Future<_i3.PaginatedResult<_i2.EditRequest>>.value(
            _FakePaginatedResult_1<_i2.EditRequest>(
          this,
          Invocation.method(
            #getEditRequests,
            [],
            {
              #page: page,
              #pageSize: pageSize,
              #filter: filter,
              #sortField: sortField,
              #sortDirection: sortDirection,
            },
          ),
        )),
      ) as _i8.Future<_i3.PaginatedResult<_i2.EditRequest>>);

  @override
  _i8.Future<_i2.EditRequest?> getEditRequest(String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getEditRequest,
          [id],
        ),
        returnValue: _i8.Future<_i2.EditRequest?>.value(),
      ) as _i8.Future<_i2.EditRequest?>);

  @override
  _i8.Future<void> updateEditRequestStatus(
    String? id,
    dynamic status,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateEditRequestStatus,
          [
            id,
            status,
          ],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<bool> deleteEditRequest(String? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteEditRequest,
          [id],
        ),
        returnValue: _i8.Future<bool>.value(false),
      ) as _i8.Future<bool>);

  @override
  _i8.Future<_i4.EditResult> saveEditResult(
    String? requestId,
    String? originalImageId,
    String? resultImagePath,
    dynamic status, {
    String? errorMessage,
    int? processingTimeMs,
    Map<String, double>? confidenceScores,
    dynamic metrics,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveEditResult,
          [
            requestId,
            originalImageId,
            resultImagePath,
            status,
          ],
          {
            #errorMessage: errorMessage,
            #processingTimeMs: processingTimeMs,
            #confidenceScores: confidenceScores,
            #metrics: metrics,
          },
        ),
        returnValue: _i8.Future<_i4.EditResult>.value(_FakeEditResult_2(
          this,
          Invocation.method(
            #saveEditResult,
            [
              requestId,
              originalImageId,
              resultImagePath,
              status,
            ],
            {
              #errorMessage: errorMessage,
              #processingTimeMs: processingTimeMs,
              #confidenceScores: confidenceScores,
              #metrics: metrics,
            },
          ),
        )),
      ) as _i8.Future<_i4.EditResult>);

  @override
  _i8.Future<_i3.PaginatedResult<_i4.EditResult>> getEditResults({
    int? page = 1,
    int? pageSize = 20,
    _i3.EditResultFilter? filter,
    _i3.EditResultSortField? sortField = _i3.EditResultSortField.createdAt,
    _i3.SortDirection? sortDirection = _i3.SortDirection.descending,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getEditResults,
          [],
          {
            #page: page,
            #pageSize: pageSize,
            #filter: filter,
            #sortField: sortField,
            #sortDirection: sortDirection,
          },
        ),
        returnValue: _i8.Future<_i3.PaginatedResult<_i4.EditResult>>.value(
            _FakePaginatedResult_1<_i4.EditResult>(
          this,
          Invocation.method(
            #getEditResults,
            [],
            {
              #page: page,
              #pageSize: pageSize,
              #filter: filter,
              #sortField: sortField,
              #sortDirection: sortDirection,
            },
          ),
        )),
      ) as _i8.Future<_i3.PaginatedResult<_i4.EditResult>>);

  @override
  _i8.Future<_i4.EditResult?> getEditResult(String? id) => (super.noSuchMethod(
        Invocation.method(
          #getEditResult,
          [id],
        ),
        returnValue: _i8.Future<_i4.EditResult?>.value(),
      ) as _i8.Future<_i4.EditResult?>);

  @override
  _i8.Future<List<_i4.EditResult>> getEditResultsForRequest(
          String? requestId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getEditResultsForRequest,
          [requestId],
        ),
        returnValue: _i8.Future<List<_i4.EditResult>>.value(<_i4.EditResult>[]),
      ) as _i8.Future<List<_i4.EditResult>>);

  @override
  _i8.Future<bool> deleteEditResult(String? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteEditResult,
          [id],
        ),
        returnValue: _i8.Future<bool>.value(false),
      ) as _i8.Future<bool>);

  @override
  _i8.Future<List<_i2.EditRequest>> createMultipleEditRequests(
          List<Map<String, dynamic>>? requestData) =>
      (super.noSuchMethod(
        Invocation.method(
          #createMultipleEditRequests,
          [requestData],
        ),
        returnValue:
            _i8.Future<List<_i2.EditRequest>>.value(<_i2.EditRequest>[]),
      ) as _i8.Future<List<_i2.EditRequest>>);

  @override
  _i8.Future<void> updateMultipleEditRequestStatus(
    List<String>? ids,
    dynamic status,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateMultipleEditRequestStatus,
          [
            ids,
            status,
          ],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<int> deleteMultipleEditRequests(List<String>? ids) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteMultipleEditRequests,
          [ids],
        ),
        returnValue: _i8.Future<int>.value(0),
      ) as _i8.Future<int>);

  @override
  _i8.Future<void> cleanupOldEditRequests(DateTime? olderThan) =>
      (super.noSuchMethod(
        Invocation.method(
          #cleanupOldEditRequests,
          [olderThan],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> cleanupFailedEditResults(DateTime? olderThan) =>
      (super.noSuchMethod(
        Invocation.method(
          #cleanupFailedEditResults,
          [olderThan],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);
}

/// A class which mocks [ImageRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockImageRepository extends _i1.Mock implements _i6.ImageRepository {
  MockImageRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<_i5.ImageModel> saveImage(
    String? localPath, {
    Map<String, dynamic>? metadata,
    String? mimeType,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveImage,
          [localPath],
          {
            #metadata: metadata,
            #mimeType: mimeType,
          },
        ),
        returnValue: _i8.Future<_i5.ImageModel>.value(_FakeImageModel_3(
          this,
          Invocation.method(
            #saveImage,
            [localPath],
            {
              #metadata: metadata,
              #mimeType: mimeType,
            },
          ),
        )),
      ) as _i8.Future<_i5.ImageModel>);

  @override
  _i8.Future<_i6.PaginatedResult<_i5.ImageModel>> getImages({
    int? page = 1,
    int? pageSize = 20,
    _i6.ImageFilter? filter,
    _i6.ImageSortField? sortField = _i6.ImageSortField.createdAt,
    _i6.SortDirection? sortDirection = _i6.SortDirection.descending,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getImages,
          [],
          {
            #page: page,
            #pageSize: pageSize,
            #filter: filter,
            #sortField: sortField,
            #sortDirection: sortDirection,
          },
        ),
        returnValue: _i8.Future<_i6.PaginatedResult<_i5.ImageModel>>.value(
            _FakePaginatedResult_4<_i5.ImageModel>(
          this,
          Invocation.method(
            #getImages,
            [],
            {
              #page: page,
              #pageSize: pageSize,
              #filter: filter,
              #sortField: sortField,
              #sortDirection: sortDirection,
            },
          ),
        )),
      ) as _i8.Future<_i6.PaginatedResult<_i5.ImageModel>>);

  @override
  _i8.Future<_i5.ImageModel?> getImage(String? id) => (super.noSuchMethod(
        Invocation.method(
          #getImage,
          [id],
        ),
        returnValue: _i8.Future<_i5.ImageModel?>.value(),
      ) as _i8.Future<_i5.ImageModel?>);

  @override
  _i8.Future<void> updateImageStatus(
    String? id,
    dynamic status, {
    String? cloudPath,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateImageStatus,
          [
            id,
            status,
          ],
          {#cloudPath: cloudPath},
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<bool> deleteImage(String? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteImage,
          [id],
        ),
        returnValue: _i8.Future<bool>.value(false),
      ) as _i8.Future<bool>);

  @override
  _i8.Future<List<_i5.ImageModel>> saveMultipleImages(
          List<String>? localPaths) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveMultipleImages,
          [localPaths],
        ),
        returnValue: _i8.Future<List<_i5.ImageModel>>.value(<_i5.ImageModel>[]),
      ) as _i8.Future<List<_i5.ImageModel>>);

  @override
  _i8.Future<void> updateMultipleImageStatus(
    List<String>? ids,
    dynamic status, {
    String? cloudPath,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateMultipleImageStatus,
          [
            ids,
            status,
          ],
          {#cloudPath: cloudPath},
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<int> deleteMultipleImages(List<String>? ids) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteMultipleImages,
          [ids],
        ),
        returnValue: _i8.Future<int>.value(0),
      ) as _i8.Future<int>);

  @override
  _i8.Future<_i9.File?> getImageFile(String? id) => (super.noSuchMethod(
        Invocation.method(
          #getImageFile,
          [id],
        ),
        returnValue: _i8.Future<_i9.File?>.value(),
      ) as _i8.Future<_i9.File?>);

  @override
  _i8.Future<dynamic> getImageDimensions(String? id) => (super.noSuchMethod(
        Invocation.method(
          #getImageDimensions,
          [id],
        ),
        returnValue: _i8.Future<dynamic>.value(),
      ) as _i8.Future<dynamic>);
}
